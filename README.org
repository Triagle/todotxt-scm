#+TITLE: todo.txt-scm

[[file:screen.png]]

[[https://github.com/ginatrapani/todo.txt-cli.git][Todo.txt]] is a simple plain text file todo list, with shell script client. This
project aims to improve on it's strengths while providing a better fit for the
GTD inclined. todo.txt-scm comes with multiple improvements over the original
implementation, including support for due dates, recurring tasks, attachments,
inbox items, and next actions.

* Features
todo.txt-scm comes with the multitude of advantages the original plain text
todo.txt setup comes with including:

- *Simple* human readable storage format
- *Contextual* task information (/@phone/, /@computer/, etc...)
- *Projects*
- *Priorities*
- Task *properties* (/due:2016-01-01/)

In developing this tool, a number of new features that compliment the original
format have been added such as:

- Support and syntax for *inbox items*
- *Next actions*
- Task *due dates*
- *Recurring tasks*
- Revamped *tabular output*, original *highlighted list output* and *hierarchical tree based output*
- Ability to *act on multiple tasks*
- Task *attachments*
- Multiple *convenience commands*
- *Configuration file* support
- Custom link protocol for *external application integration* (like [[http://orgmode.org/worg/org-contrib/org-protocol.html][org-protocol]])
- *Dynamic* task *selection* (e.g set the priority of all tasks in a project with
  one command)
- *In-depth documentation*
- Easy *find and replace* (sed callout)
- Task review tools, including *recently completed task view* and *sticky (old)
  tasks*

All of this exists whilst still being compatible with the todo.txt format and
functionally able to be used in the exact same fashion.

* Installation
** Prerequisites
This project is built with[[http://wiki.call-cc.org/][ chicken scheme]], which is usually installed through
a distributions repositories or built from scratch at it's[[http://code.call-cc.org/][ download page]].

Furthermore, in order to run the program you'll need a few extra libraries (or
eggs in chicken parlance). To install these run the following command

#+BEGIN_SRC shell
chicken-install -s args bindings fmt irregex comparse numbers symbol-utils srfi-19 defstruct uri-common
#+END_SRC

Finally the build system used for this project is[[https://ninja-build.org/][ ninja]]. You can [[https://github.com/ninja-build/ninja/releases][download]] it, or
install ninja from your distribution's[[https://github.com/ninja-build/ninja/wiki/Pre-built-Ninja-packages][ repositories]].
** Setup
After cloning the repository, =cd= into it's top level directory and run =ninja=

#+BEGIN_SRC shell
cd todo.txt-scm
ninja
#+END_SRC

You will find the built executable in the =build= directory. Simply move this to
somewhere in your =PATH= and you have successfully installed the program.
** Configuration
After installing the program you need to let it know where you are keeping your
todo files. First create the todo directory and create the required todo.txt and
done.txt files

#+BEGIN_SRC shell
mkdir todo
touch todo.txt
touch done.txt
#+END_SRC

Next you can either use the =TODO_DIR= environment variable or the configuration
file to tell the program where to find your files.

If you choose to use the environment variable try
#+BEGIN_SRC shell
export TODO_DIR="/path/to/todo/dir/" # path should also end in "/"
#+END_SRC

If you choose to use the configuration file you'll need to first create the file somewhere

#+BEGIN_SRC shell
# cd ~
touch .todo.cfg
#+END_SRC

You can then use the =todo-dir= property to point to where your todo files are
kept

#+BEGIN_SRC conf
  todo-dir = "/path/to/todo/dir/" # Comments are supported here too!
#+END_SRC

Finally you can use the =TODO_CONFIG= variable to point to this new configuration
file.

#+BEGIN_SRC shell
export TODO_CONFIG="/path/to/.todo.cfg"
#+END_SRC
* Usage

You can either checkout the[[https://asciinema.org/a/erjllgeee0w289yhi2y4g2r0r][ asciicast]], or the project's wiki for detailed
information on how to effectively use todo.txt-scm.

I recommend skimming through the asciicast if no input is received for more than
20 or so seconds, I take regular breaks to help with RSI issues.
